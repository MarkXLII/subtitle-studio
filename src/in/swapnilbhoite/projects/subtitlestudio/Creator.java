/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * Creator.java
 *
 * Created on 15 Nov, 2011, 2:12:20 PM
 */
package in.swapnilbhoite.projects.subtitlestudio;

import java.awt.*;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.ws.Action;
import uk.co.caprica.vlcj.filter.VideoFileFilter;
import uk.co.caprica.vlcj.player.MediaPlayerFactory;
import uk.co.caprica.vlcj.player.embedded.EmbeddedMediaPlayer;
import uk.co.caprica.vlcj.runtime.RuntimeUtil;
import uk.co.caprica.vlcj.runtime.windows.WindowsRuntimeUtil;

/**
 *
 * @author Swapnil Bhoite
 */
public class Creator extends javax.swing.JFrame {

    /**
     * Creates new form Synchro
     */
    public Creator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogCreatorFileChooser = new javax.swing.JDialog();
        jPanelCreatorFileChooserParent = new javax.swing.JPanel();
        jButtonBrowseVideoFile = new javax.swing.JButton();
        jLabelTitle = new javax.swing.JLabel();
        jLabelArtist = new javax.swing.JLabel();
        jLabelAlbum = new javax.swing.JLabel();
        jTextFieldTitle = new javax.swing.JTextField();
        jTextFieldArtist = new javax.swing.JTextField();
        jTextFieldAlbum = new javax.swing.JTextField();
        jLabelCreatorFileChooserTitle = new javax.swing.JLabel();
        jLabelCreatorFileName = new javax.swing.JLabel();
        jLabelCreatorOutputHint = new javax.swing.JLabel();
        jLabelCreatorOutputLocation = new javax.swing.JLabel();
        jButtonCreatorFileChooserSubmit = new javax.swing.JButton();
        jDialogCreatorRawCaptions = new javax.swing.JDialog();
        jPanelCreatorRawCaptionsParent = new javax.swing.JPanel();
        jLabelCreatorRawCaptionsTitle = new javax.swing.JLabel();
        jLabelCreatorRawCaptionsHint = new javax.swing.JLabel();
        jScrollPaneCreatorRawCaptions = new javax.swing.JScrollPane();
        jTextAreaCreatorRawCaptions = new javax.swing.JTextArea();
        jButtonCreatorRawCaptionsSubmit = new javax.swing.JButton();
        jPanelCreatorParent = new javax.swing.JPanel();
        jPanelVideoPreview = new javax.swing.JPanel();
        jPanelSubtitlePreview = new javax.swing.JPanel();
        jLabelSubtitlePreview = new javax.swing.JLabel();
        jPanelPlaybackControls = new javax.swing.JPanel();
        jButtonPlayPause = new javax.swing.JButton();
        jLabelVolume = new javax.swing.JLabel();
        jSliderVolume = new javax.swing.JSlider();
        jLabelVolumeValue = new javax.swing.JLabel();
        jLabelDuration = new javax.swing.JLabel();
        jPanelSubtitleParent = new javax.swing.JPanel();
        jLabelCaptionPrevious = new javax.swing.JLabel();
        jLabelCaptionCurrent = new javax.swing.JLabel();
        jLabelCaptionNext1 = new javax.swing.JLabel();
        jLabelCaptionNext2 = new javax.swing.JLabel();
        jLabelCaptionNext3 = new javax.swing.JLabel();
        jButtonSync = new javax.swing.JButton();
        jLabelShorcutKeyHint = new javax.swing.JLabel();
        jPanelCreatorFooter = new javax.swing.JPanel();
        jProgressBarPlayback = new javax.swing.JProgressBar();
        jLabelWebsiteHome = new javax.swing.JLabel();
        jCheckBoxEnableVideoPreview = new javax.swing.JCheckBox();
        jPanelCreatorTitle = new javax.swing.JPanel();
        jLabelCreatorTitle = new javax.swing.JLabel();

        jDialogCreatorFileChooser.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialogCreatorFileChooser.setTitle("Lyrics Synchronizer By Swapnil");
        jDialogCreatorFileChooser.setModal(true);
        jDialogCreatorFileChooser.setResizable(false);
        jDialogCreatorFileChooser.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanelCreatorFileChooserParent.setBackground(new java.awt.Color(51, 51, 51));

        jButtonBrowseVideoFile.setText("Browse Video File");
        jButtonBrowseVideoFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseVideoFileActionPerformed(evt);
            }
        });

        jLabelTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTitle.setText("Title    - ");

        jLabelArtist.setForeground(new java.awt.Color(255, 255, 255));
        jLabelArtist.setText("Artist  - ");

        jLabelAlbum.setForeground(new java.awt.Color(255, 255, 255));
        jLabelAlbum.setText("Album -");

        jTextFieldTitle.setText("-");

        jTextFieldArtist.setText("-");

        jTextFieldAlbum.setText("-");

        jLabelCreatorFileChooserTitle.setBackground(new java.awt.Color(0, 255, 255));
        jLabelCreatorFileChooserTitle.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabelCreatorFileChooserTitle.setForeground(new java.awt.Color(0, 255, 255));
        jLabelCreatorFileChooserTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCreatorFileChooserTitle.setText("Add Source File");
        jLabelCreatorFileChooserTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabelCreatorFileName.setForeground(new java.awt.Color(0, 255, 255));
        jLabelCreatorFileName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCreatorFileName.setText("File Name");
        jLabelCreatorFileName.setAutoscrolls(true);

        jLabelCreatorOutputHint.setForeground(new java.awt.Color(204, 204, 204));
        jLabelCreatorOutputHint.setText("Output File will be saved in same Source Location...");

        jLabelCreatorOutputLocation.setForeground(new java.awt.Color(204, 204, 204));
        jLabelCreatorOutputLocation.setText("Location of Output File...");
        jLabelCreatorOutputLocation.setAutoscrolls(true);

        jButtonCreatorFileChooserSubmit.setText("Continue >");
        jButtonCreatorFileChooserSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreatorFileChooserSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCreatorFileChooserParentLayout = new javax.swing.GroupLayout(jPanelCreatorFileChooserParent);
        jPanelCreatorFileChooserParent.setLayout(jPanelCreatorFileChooserParentLayout);
        jPanelCreatorFileChooserParentLayout.setHorizontalGroup(
            jPanelCreatorFileChooserParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCreatorFileChooserParentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCreatorFileChooserParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelCreatorFileChooserTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                    .addComponent(jButtonBrowseVideoFile)
                    .addComponent(jLabelCreatorFileName)
                    .addGroup(jPanelCreatorFileChooserParentLayout.createSequentialGroup()
                        .addComponent(jLabelTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE))
                    .addComponent(jLabelCreatorOutputHint)
                    .addComponent(jLabelCreatorOutputLocation, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                    .addComponent(jButtonCreatorFileChooserSubmit)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelCreatorFileChooserParentLayout.createSequentialGroup()
                        .addGroup(jPanelCreatorFileChooserParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelArtist)
                            .addComponent(jLabelAlbum))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelCreatorFileChooserParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldAlbum, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                            .addComponent(jTextFieldArtist, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanelCreatorFileChooserParentLayout.setVerticalGroup(
            jPanelCreatorFileChooserParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCreatorFileChooserParentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelCreatorFileChooserTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonBrowseVideoFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelCreatorFileName)
                .addGap(11, 11, 11)
                .addGroup(jPanelCreatorFileChooserParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTitle)
                    .addComponent(jTextFieldTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCreatorFileChooserParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelArtist)
                    .addComponent(jTextFieldArtist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCreatorFileChooserParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAlbum)
                    .addComponent(jTextFieldAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelCreatorOutputHint)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelCreatorOutputLocation)
                .addGap(11, 11, 11)
                .addComponent(jButtonCreatorFileChooserSubmit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialogCreatorFileChooserLayout = new javax.swing.GroupLayout(jDialogCreatorFileChooser.getContentPane());
        jDialogCreatorFileChooser.getContentPane().setLayout(jDialogCreatorFileChooserLayout);
        jDialogCreatorFileChooserLayout.setHorizontalGroup(
            jDialogCreatorFileChooserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelCreatorFileChooserParent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialogCreatorFileChooserLayout.setVerticalGroup(
            jDialogCreatorFileChooserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelCreatorFileChooserParent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDialogCreatorRawCaptions.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        jDialogCreatorRawCaptions.setTitle("Lyrics Synchronizer By Swapnil");
        jDialogCreatorRawCaptions.setModal(true);
        jDialogCreatorRawCaptions.setResizable(false);
        jDialogCreatorRawCaptions.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanelCreatorRawCaptionsParent.setBackground(new java.awt.Color(51, 51, 51));

        jLabelCreatorRawCaptionsTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelCreatorRawCaptionsTitle.setForeground(new java.awt.Color(0, 255, 255));
        jLabelCreatorRawCaptionsTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCreatorRawCaptionsTitle.setText("Content...(Lyrics or Dialogs)");

        jLabelCreatorRawCaptionsHint.setForeground(new java.awt.Color(204, 204, 204));
        jLabelCreatorRawCaptionsHint.setText("Paste the content here(Ctr + V)...");

        jTextAreaCreatorRawCaptions.setColumns(20);
        jTextAreaCreatorRawCaptions.setRows(5);
        jScrollPaneCreatorRawCaptions.setViewportView(jTextAreaCreatorRawCaptions);

        jButtonCreatorRawCaptionsSubmit.setText("Continue >");
        jButtonCreatorRawCaptionsSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreatorRawCaptionsSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCreatorRawCaptionsParentLayout = new javax.swing.GroupLayout(jPanelCreatorRawCaptionsParent);
        jPanelCreatorRawCaptionsParent.setLayout(jPanelCreatorRawCaptionsParentLayout);
        jPanelCreatorRawCaptionsParentLayout.setHorizontalGroup(
            jPanelCreatorRawCaptionsParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCreatorRawCaptionsParentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCreatorRawCaptionsParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelCreatorRawCaptionsTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(jLabelCreatorRawCaptionsHint)
                    .addComponent(jScrollPaneCreatorRawCaptions, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(jButtonCreatorRawCaptionsSubmit))
                .addContainerGap())
        );
        jPanelCreatorRawCaptionsParentLayout.setVerticalGroup(
            jPanelCreatorRawCaptionsParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCreatorRawCaptionsParentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelCreatorRawCaptionsTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelCreatorRawCaptionsHint)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneCreatorRawCaptions, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCreatorRawCaptionsSubmit)
                .addContainerGap())
        );

        javax.swing.GroupLayout jDialogCreatorRawCaptionsLayout = new javax.swing.GroupLayout(jDialogCreatorRawCaptions.getContentPane());
        jDialogCreatorRawCaptions.getContentPane().setLayout(jDialogCreatorRawCaptionsLayout);
        jDialogCreatorRawCaptionsLayout.setHorizontalGroup(
            jDialogCreatorRawCaptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelCreatorRawCaptionsParent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialogCreatorRawCaptionsLayout.setVerticalGroup(
            jDialogCreatorRawCaptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelCreatorRawCaptionsParent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Subtitle Studio 3.1");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanelCreatorParent.setBackground(new java.awt.Color(51, 51, 51));

        jPanelVideoPreview.setBackground(new java.awt.Color(0, 0, 0));
        jPanelVideoPreview.setToolTipText("Video window");

        javax.swing.GroupLayout jPanelVideoPreviewLayout = new javax.swing.GroupLayout(jPanelVideoPreview);
        jPanelVideoPreview.setLayout(jPanelVideoPreviewLayout);
        jPanelVideoPreviewLayout.setHorizontalGroup(
            jPanelVideoPreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelVideoPreviewLayout.setVerticalGroup(
            jPanelVideoPreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jPanelSubtitlePreview.setBackground(new java.awt.Color(0, 0, 0));

        jLabelSubtitlePreview.setFont(new java.awt.Font("Candara", 0, 12)); // NOI18N
        jLabelSubtitlePreview.setForeground(new java.awt.Color(255, 255, 255));
        jLabelSubtitlePreview.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSubtitlePreview.setText("Subtitle Preview");
        jLabelSubtitlePreview.setToolTipText("Subtitle Preview");
        jLabelSubtitlePreview.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanelSubtitlePreviewLayout = new javax.swing.GroupLayout(jPanelSubtitlePreview);
        jPanelSubtitlePreview.setLayout(jPanelSubtitlePreviewLayout);
        jPanelSubtitlePreviewLayout.setHorizontalGroup(
            jPanelSubtitlePreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelSubtitlePreview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelSubtitlePreviewLayout.setVerticalGroup(
            jPanelSubtitlePreviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelSubtitlePreview, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        jPanelPlaybackControls.setBackground(new java.awt.Color(0, 0, 0));

        jButtonPlayPause.setBackground(new java.awt.Color(0, 0, 0));
        jButtonPlayPause.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPlayPause.setText("PLAY");
        jButtonPlayPause.setToolTipText("Play/Pause Videoplayback");
        jButtonPlayPause.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonPlayPause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlayPauseActionPerformed(evt);
            }
        });
        jButtonPlayPause.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jButtonPlayPauseKeyTyped(evt);
            }
        });

        jLabelVolume.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabelVolume.setForeground(new java.awt.Color(204, 204, 204));
        jLabelVolume.setText("Vol.");

        jSliderVolume.setBackground(new java.awt.Color(0, 0, 0));
        jSliderVolume.setToolTipText("Adjust volume");
        jSliderVolume.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSliderVolume.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderVolumeStateChanged(evt);
            }
        });
        jSliderVolume.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jButtonPlayPauseKeyTyped(evt);
            }
        });

        jLabelVolumeValue.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabelVolumeValue.setForeground(new java.awt.Color(204, 204, 204));
        jLabelVolumeValue.setText("100%");
        jLabelVolumeValue.setToolTipText("Volume");

        jLabelDuration.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabelDuration.setForeground(new java.awt.Color(204, 204, 204));
        jLabelDuration.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelDuration.setText("00:00:00,000 : 00:00:00,000");
        jLabelDuration.setToolTipText("Timers");
        jLabelDuration.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanelPlaybackControlsLayout = new javax.swing.GroupLayout(jPanelPlaybackControls);
        jPanelPlaybackControls.setLayout(jPanelPlaybackControlsLayout);
        jPanelPlaybackControlsLayout.setHorizontalGroup(
            jPanelPlaybackControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPlaybackControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonPlayPause, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabelVolume)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSliderVolume, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelVolumeValue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelDuration)
                .addGap(10, 10, 10))
        );
        jPanelPlaybackControlsLayout.setVerticalGroup(
            jPanelPlaybackControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPlaybackControlsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPlaybackControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSliderVolume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelPlaybackControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelDuration)
                        .addComponent(jLabelVolumeValue))
                    .addGroup(jPanelPlaybackControlsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonPlayPause, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelVolume)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelPlaybackControlsLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonPlayPause, jLabelDuration, jLabelVolume, jLabelVolumeValue, jSliderVolume});

        jPanelSubtitleParent.setBackground(new java.awt.Color(0, 0, 0));

        jLabelCaptionPrevious.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabelCaptionPrevious.setForeground(new java.awt.Color(51, 51, 51));
        jLabelCaptionPrevious.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCaptionPrevious.setText("Previous Dialog");
        jLabelCaptionPrevious.setToolTipText("Previous Dialog");

        jLabelCaptionCurrent.setFont(new java.awt.Font("Candara", 0, 15)); // NOI18N
        jLabelCaptionCurrent.setForeground(new java.awt.Color(255, 255, 255));
        jLabelCaptionCurrent.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCaptionCurrent.setText("Current Dialog");
        jLabelCaptionCurrent.setToolTipText("Current Dialog");
        jLabelCaptionCurrent.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 1, true));

        jLabelCaptionNext1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabelCaptionNext1.setForeground(new java.awt.Color(204, 204, 204));
        jLabelCaptionNext1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCaptionNext1.setText("Next Dialog 1");
        jLabelCaptionNext1.setToolTipText("Next Dialog 1");

        jLabelCaptionNext2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabelCaptionNext2.setForeground(new java.awt.Color(153, 153, 153));
        jLabelCaptionNext2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCaptionNext2.setText("Next Dialog 2");
        jLabelCaptionNext2.setToolTipText("Next Dialog 2");

        jLabelCaptionNext3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabelCaptionNext3.setForeground(new java.awt.Color(102, 102, 102));
        jLabelCaptionNext3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCaptionNext3.setText("Next Dialog 3");
        jLabelCaptionNext3.setToolTipText("Next Dialog 3");

        jButtonSync.setBackground(new java.awt.Color(0, 0, 0));
        jButtonSync.setFont(new java.awt.Font("Candara", 0, 12)); // NOI18N
        jButtonSync.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSync.setText("START \"Current...");
        jButtonSync.setToolTipText("Sync the dialog");
        jButtonSync.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonSync.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSyncActionPerformed(evt);
            }
        });
        jButtonSync.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jButtonPlayPauseKeyTyped(evt);
            }
        });

        jLabelShorcutKeyHint.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelShorcutKeyHint.setForeground(new java.awt.Color(255, 255, 255));
        jLabelShorcutKeyHint.setText("Shortcut Key - 's'");

        javax.swing.GroupLayout jPanelSubtitleParentLayout = new javax.swing.GroupLayout(jPanelSubtitleParent);
        jPanelSubtitleParent.setLayout(jPanelSubtitleParentLayout);
        jPanelSubtitleParentLayout.setHorizontalGroup(
            jPanelSubtitleParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSubtitleParentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSubtitleParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelCaptionPrevious, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                    .addComponent(jLabelCaptionCurrent, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                    .addComponent(jLabelCaptionNext1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                    .addComponent(jLabelCaptionNext2, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                    .addComponent(jLabelCaptionNext3, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                    .addComponent(jLabelShorcutKeyHint)
                    .addComponent(jButtonSync, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanelSubtitleParentLayout.setVerticalGroup(
            jPanelSubtitleParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSubtitleParentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelCaptionPrevious, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelCaptionCurrent, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelCaptionNext1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelCaptionNext2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelCaptionNext3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSync, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelShorcutKeyHint, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanelSubtitleParentLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonSync, jLabelCaptionCurrent, jLabelCaptionNext1, jLabelCaptionNext2, jLabelCaptionNext3, jLabelCaptionPrevious, jLabelShorcutKeyHint});

        jPanelCreatorFooter.setBackground(new java.awt.Color(0, 0, 0));

        jProgressBarPlayback.setToolTipText("Playback progress");
        jProgressBarPlayback.setStringPainted(true);

        jLabelWebsiteHome.setBackground(new java.awt.Color(0, 0, 0));
        jLabelWebsiteHome.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        jLabelWebsiteHome.setForeground(new java.awt.Color(255, 255, 255));
        jLabelWebsiteHome.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelWebsiteHome.setText("http://subtitlestudio.blogspot.com");
        jLabelWebsiteHome.setToolTipText("Application homepage");
        jLabelWebsiteHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelWebsiteHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelWebsiteHomeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelWebsiteHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelWebsiteHomeMouseExited(evt);
            }
        });

        jCheckBoxEnableVideoPreview.setBackground(new java.awt.Color(0, 0, 0));
        jCheckBoxEnableVideoPreview.setForeground(new java.awt.Color(204, 204, 204));
        jCheckBoxEnableVideoPreview.setSelected(true);
        jCheckBoxEnableVideoPreview.setText("Enable Video Preview");
        jCheckBoxEnableVideoPreview.setToolTipText("Enable/Disable video preview");
        jCheckBoxEnableVideoPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxEnableVideoPreviewActionPerformed(evt);
            }
        });
        jCheckBoxEnableVideoPreview.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jButtonPlayPauseKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanelCreatorFooterLayout = new javax.swing.GroupLayout(jPanelCreatorFooter);
        jPanelCreatorFooter.setLayout(jPanelCreatorFooterLayout);
        jPanelCreatorFooterLayout.setHorizontalGroup(
            jPanelCreatorFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCreatorFooterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCreatorFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jProgressBarPlayback, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 849, Short.MAX_VALUE)
                    .addGroup(jPanelCreatorFooterLayout.createSequentialGroup()
                        .addComponent(jCheckBoxEnableVideoPreview)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 518, Short.MAX_VALUE)
                        .addComponent(jLabelWebsiteHome)))
                .addContainerGap())
        );
        jPanelCreatorFooterLayout.setVerticalGroup(
            jPanelCreatorFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCreatorFooterLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBarPlayback, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCreatorFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelWebsiteHome)
                    .addComponent(jCheckBoxEnableVideoPreview))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelCreatorTitle.setBackground(new java.awt.Color(0, 0, 0));

        jLabelCreatorTitle.setFont(new java.awt.Font("Candara", 0, 36)); // NOI18N
        jLabelCreatorTitle.setForeground(new java.awt.Color(0, 255, 255));
        jLabelCreatorTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCreatorTitle.setText("Lyrics Synchronizer");

        javax.swing.GroupLayout jPanelCreatorTitleLayout = new javax.swing.GroupLayout(jPanelCreatorTitle);
        jPanelCreatorTitle.setLayout(jPanelCreatorTitleLayout);
        jPanelCreatorTitleLayout.setHorizontalGroup(
            jPanelCreatorTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCreatorTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelCreatorTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 849, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelCreatorTitleLayout.setVerticalGroup(
            jPanelCreatorTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCreatorTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelCreatorTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelCreatorParentLayout = new javax.swing.GroupLayout(jPanelCreatorParent);
        jPanelCreatorParent.setLayout(jPanelCreatorParentLayout);
        jPanelCreatorParentLayout.setHorizontalGroup(
            jPanelCreatorParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCreatorParentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCreatorParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelCreatorFooter, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelCreatorTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelCreatorParentLayout.createSequentialGroup()
                        .addGroup(jPanelCreatorParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanelPlaybackControls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelSubtitlePreview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelVideoPreview, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelSubtitleParent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelCreatorParentLayout.setVerticalGroup(
            jPanelCreatorParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCreatorParentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelCreatorTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCreatorParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelCreatorParentLayout.createSequentialGroup()
                        .addComponent(jPanelVideoPreview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelSubtitlePreview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelPlaybackControls, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanelSubtitleParent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelCreatorFooter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelCreatorParent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelCreatorParent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBrowseVideoFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseVideoFileActionPerformed
        browseFile();
    }//GEN-LAST:event_jButtonBrowseVideoFileActionPerformed

    private void jButtonCreatorFileChooserSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreatorFileChooserSubmitActionPerformed
        gotTheFile();
    }//GEN-LAST:event_jButtonCreatorFileChooserSubmitActionPerformed

    private void jButtonCreatorRawCaptionsSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreatorRawCaptionsSubmitActionPerformed
        gotAllData();
    }//GEN-LAST:event_jButtonCreatorRawCaptionsSubmitActionPerformed

    private void jButtonPlayPauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlayPauseActionPerformed
        try {
            playPause();
        } catch (IOException ex) {
            Logger.getLogger(Creator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonPlayPauseActionPerformed

    private void jSliderVolumeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderVolumeStateChanged
        if (jSliderVolume.getValue() == 0) {
            jLabelVolumeValue.setText("000" + "%");
        } else if (jSliderVolume.getValue() < 5) {
            jLabelVolumeValue.setText("00" + 2 * jSliderVolume.getValue() + "%");
        } else if (jSliderVolume.getValue() < 50) {
            jLabelVolumeValue.setText("0" + 2 * jSliderVolume.getValue() + "%");
        } else {
            jLabelVolumeValue.setText("" + 2 * jSliderVolume.getValue() + "%");
        }
        if (isStarted && isPlaying) {
            mediaPlayer.setVolume(jSliderVolume.getValue());
        }
    }//GEN-LAST:event_jSliderVolumeStateChanged

    private void jButtonSyncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSyncActionPerformed
        try {
            sync();
        } catch (IOException ex) {
            Logger.getLogger(Creator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonSyncActionPerformed

    private void jCheckBoxEnableVideoPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxEnableVideoPreviewActionPerformed
        if (videoPre) {
            vs.setSize(0, 0);
            videoPre = false;
        } else {
            vs.setSize(jPanelVideoPreview.getSize());
            videoPre = true;
        }
    }//GEN-LAST:event_jCheckBoxEnableVideoPreviewActionPerformed

    private void jButtonPlayPauseKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonPlayPauseKeyTyped
        if (evt.getKeyChar() == 's') {
            try {
                sync();
            } catch (IOException ex) {
                Logger.getLogger(Creator.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButtonPlayPauseKeyTyped

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (isPlaying) {
            try {
                writer.close();
            } catch (IOException ex) {
                Logger.getLogger(Creator.class.getName()).log(Level.SEVERE, null, ex);
            }
            mediaPlayer.stop();
            sw1.sstop();
            while (mediaPlayer.isPlaying());
        }
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void jLabelWebsiteHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelWebsiteHomeMouseClicked

        try {
            Desktop.getDesktop().browse(URI.create("http://subtitlestudio.blogspot.com"));
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jLabelWebsiteHomeMouseClicked

    private void jLabelWebsiteHomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelWebsiteHomeMouseEntered
        jLabelWebsiteHome.setForeground(jLabelCreatorTitle.getForeground());
    }//GEN-LAST:event_jLabelWebsiteHomeMouseEntered

    private void jLabelWebsiteHomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelWebsiteHomeMouseExited
        jLabelWebsiteHome.setForeground(Color.white);
    }//GEN-LAST:event_jLabelWebsiteHomeMouseExited

    @Action
    public void browseFile() {
        JFileChooser fc = new JFileChooser();
        fc.addChoosableFileFilter(new FileNameExtensionFilter("Supported Video Files", new VideoFileFilter().getExtensions()));
        fc.showOpenDialog(jDialogCreatorFileChooser);
        File ff = fc.getSelectedFile();
        if (ff != null) {
            haveFile = true;
            filePath = ff.getAbsolutePath();
            fileName = ff.getName();
            fileName = fileName.substring(0, Creator.fileName.length() - 4);
            jTextFieldTitle.setText(fileName);
            jLabelCreatorFileName.setText(Creator.fileName);
            String temp = "", temp2 = "\\";
            for (int i = 0; i < Creator.filePath.length(); i++) {
                temp = temp + Creator.filePath.charAt(i);
                if (Creator.filePath.charAt(i) == temp2.charAt(0)) {
                    temp = temp + temp2.charAt(0);
                }
            }
            output = temp.substring(0, temp.length() - 3);
            output = Creator.output + "srt";
            jLabelCreatorOutputLocation.setText(Creator.output);
        }
    }

    @Action
    public void gotTheFile() {
        if (!Creator.haveFile) {
            browseFile();
        } else {
            if (!jTextFieldTitle.getText().equals("")) {
                Creator.title = jTextFieldTitle.getText();
            }
            if (!jTextFieldArtist.getText().equals("")) {
                Creator.artist = jTextFieldArtist.getText();
            }
            if (!jTextFieldAlbum.getText().equals("")) {
                Creator.album = jTextFieldAlbum.getText();
            }
            jDialogCreatorFileChooser.dispose();
            jDialogCreatorRawCaptions.setSize(400, 600);
            jDialogCreatorRawCaptions.setLocationRelativeTo(jDialogCreatorFileChooser);
            jDialogCreatorRawCaptions.setVisible(true);
        }
    }

    @Action
    public void gotAllData() {
        if (jTextAreaCreatorRawCaptions.getText().equals("") || jTextAreaCreatorRawCaptions.getText().equals("PLEASE PASTES SOME DIALOGS HERE...")) {
            jTextAreaCreatorRawCaptions.setText("PLEASE PASTES SOME DIALOGS HERE...");
        } else {
            data = jTextAreaCreatorRawCaptions.getText() + "\n";
            data = data.replace("’", "'");
            dataLength = Creator.data.length();
            jDialogCreatorRawCaptions.dispose();
            changeTitle();
            initSynchro();
        }
    }

    private void changeTitle() {
        this.setTitle("Lyrics Synchronizer By Swapnil...Synchronizing " + fileName);
    }

    public static void initSynchro() {
        vlcArgs = new ArrayList<String>();
        vlcArgs.add("--no-plugins-cache");
        vlcArgs.add("--no-video-title-show");
        vlcArgs.add("--no-snapshot-preview");
        if (RuntimeUtil.isWindows()) {
            vlcArgs.add("--plugin-path=" + WindowsRuntimeUtil.getVlcInstallDir() + "\\plugins");
            com.sun.jna.NativeLibrary.addSearchPath("libvlc", WindowsRuntimeUtil.getVlcInstallDir());
        } else {
            vlcArgs.add("--plugin-path=/home/linux/vlc/lib");
            com.sun.jna.NativeLibrary.addSearchPath("libvlc", "/home/linux/vlc/lib");
            vlcArgs.add("--plugin-path=" + System.getProperty("user.home") + "/.vlcj");
        }
        factory = new MediaPlayerFactory(vlcArgs.toArray(new String[vlcArgs.size()]));
        vs = new Canvas();
        vs.setSize(jPanelVideoPreview.getSize());
        jPanelVideoPreview.add(vs, BorderLayout.CENTER);
        mediaPlayer = factory.newMediaPlayer(null);
        mediaPlayer.setVideoSurface(vs);
        mediaPlayer.prepareMedia(filePath);
        loading = false;
    }

    private void exit(java.awt.event.WindowEvent evt) {
        if (isStarted) {
            if (mediaPlayer.isPlaying()) {
                mediaPlayer.stop();
                mediaPlayer.release();
            }
            if (fileOpen) {
                try {
                    writer.newLine();
                    writer.newLine();
                    writer.write("" + index);
                    writer.newLine();
                    writer.write(new MyTime(fileLength - 11000) + " --> " + new MyTime(fileLength));
                    writer.newLine();
                    writer.write("BETA VERSION, Report Improvements to");
                    writer.newLine();
                    writer.write("http://subtitlestudio.blogspot.com");
                    writer.close();
                } catch (IOException ex) {
                    Logger.getLogger(Creator.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        System.exit(0);
    }

    private String getLine() {
        String temp = "";
        while (iter < dataLength) {
            char ch = data.charAt(iter);
            if (ch != '\n') {
                temp = temp + ch;
            } else {
                iter++;
                if (temp.equals("") || temp.equals("\n")) {
                    return getLine();
                }
                return temp;
            }
            iter++;
        }
        return "\0";
    }

    @Action
    public void playPause() throws IOException {
        if (!isStarted && !loading) {
            sync = true;
            isStarted = true;
            isPlaying = true;
            jButtonPlayPause.setText("PAUSE");

            d0 = "...";
            d1 = getLine();
            d2 = getLine();
            d3 = getLine();
            d4 = getLine();
            setDialogs();
            if (d1.length() >= 10) {
                jButtonSync.setText("START " + '"' + d1.substring(0, 10) + "...");
            } else {
                jButtonSync.setText("START " + '"' + d1.substring(0, d1.length()) + '"');
            }
            writer = new BufferedWriter(new FileWriter(output));
            fileOpen = true;
            sw1 = new StopWatch();
            StopWatch.instance = 0;
            mediaPlayer.play();
            while (mediaPlayer.getTime() <= 0);
            sw1.start();
            while (fileLength == 0) {
                fileLength = mediaPlayer.getLength();
            }
            jSliderVolumeStateChanged(null);
        } else if (isStarted) {
            if (isPlaying) {
                isPlaying = false;
                mediaPlayer.pause();
                sw1.pauseSW();
                jButtonPlayPause.setText("PLAY");
            } else {
                isPlaying = true;
                mediaPlayer.play();
                sw1.resumeSW();
                jButtonPlayPause.setText("PAUSE");
                jSliderVolumeStateChanged(null);
            }
        }
    }

    private void setDialogs() {
        if (d0.equals("\0")) {
            jLabelCaptionPrevious.setText("...");
        } else {
            jLabelCaptionPrevious.setText(d0);
        }
        if (d1.equals("\0")) {
            jLabelCaptionCurrent.setText("...");
        } else {
            jLabelCaptionCurrent.setText(d1);
        }
        if (d2.equals("\0")) {
            jLabelCaptionNext1.setText("...");
        } else {
            jLabelCaptionNext1.setText(d2);
        }
        if (d3.equals("\0")) {
            jLabelCaptionNext2.setText("...");
        } else {
            jLabelCaptionNext2.setText(d3);
        }
        if (d4.equals("\0")) {
            jLabelCaptionNext3.setText("...");
        } else {
            jLabelCaptionNext3.setText(d4);
        }
    }

    @Action
    public void sync() throws IOException {
        if (isStarted && isPlaying) {
            if (!d1.equals("\0")) {
                if (sync) {
                    startTime = new MyTime(sw1.getElapsedTime());
                    sync = false;
                    jLabelSubtitlePreview.setText(d1);
                    if (d1.length() >= 12) {
                        jButtonSync.setText("..." + d1.substring(d1.length() - 12, d1.length()) + '"' + " END");
                    } else {
                        jButtonSync.setText('"' + d1 + '"' + " END");
                    }
                    jLabelCaptionCurrent.setFont(new Font("Candara", Font.BOLD, 15));
                    jLabelCaptionCurrent.setForeground(jLabelCreatorTitle.getForeground());

                    if (firstTime) {
                        long temp1 = 8000;
                        long temp2 = (temp1 * 5) / 8;

                        if (title.equals("-") && artist.equals("-") && album.equals("-")) {
                            writer.write("1");
                            writer.newLine();
                            writer.write(new MyTime(0) + " --> " + new MyTime(temp2));
                            writer.newLine();
                            writer.write("BETA VERSION, Report Improvements to");
                            writer.newLine();
                            writer.write("http://subtitlestudio.blogspot.com");
                        } else {
                            writer.write("1");
                            writer.newLine();
                            writer.write(new MyTime(0) + " --> " + new MyTime(temp2));
                            if (!title.equals("-")) {
                                writer.newLine();
                                writer.write("" + title);
                            }
                            if (!artist.equals("-")) {
                                writer.newLine();
                                writer.write("By '" + artist + "'");
                            }
                            if (!album.equals("-")) {
                                writer.newLine();
                                writer.write("Appears in '" + album + "'");
                            }
                        }

                        writer.newLine();
                        writer.newLine();
                        writer.write("2");
                        writer.newLine();
                        writer.write(new MyTime(temp2) + " --> " + new MyTime(temp1));
                        writer.newLine();
                        writer.write("BETA VERSION, Report Improvements to");
                        writer.newLine();
                        writer.write("http://subtitlestudio.blogspot.com");

                        firstTime = false;
                    }
                } else {
                    endTime = new MyTime(sw1.getElapsedTime());
                    writeToFile();
                    sync = true;
                    d0 = d1;
                    d1 = d2;
                    d2 = d3;
                    d3 = d4;
                    d4 = getLine();
                    setDialogs();
                    jLabelSubtitlePreview.setText("");
                    if (d1.length() >= 10) {
                        jButtonSync.setText("START " + '"' + d1.substring(0, 10) + "...");
                    } else {
                        jButtonSync.setText("START " + '"' + d1 + '"');
                    }
                    jLabelCaptionCurrent.setFont(new Font("Candara", Font.PLAIN, 15));
                    jLabelCaptionCurrent.setForeground(jLabelSubtitlePreview.getForeground());

                    if (fileOpen && d1.equals("\0")) {
                        writer.newLine();
                        writer.newLine();
                        writer.write("" + index);
                        writer.newLine();
                        writer.write(new MyTime(fileLength - 12000) + " --> " + new MyTime(fileLength - 1000));
                        writer.newLine();
                        writer.write("BETA VERSION, Report Improvements to");
                        writer.newLine();
                        writer.write("http://subtitlestudio.blogspot.com");
                        writer.newLine();
                        writer.write("By Swapnil http://www.facebook.com/djswap1216");
                        writer.close();
                        fileOpen = false;

                        jButtonSync.setText("Synchronization Complete");
                        jLabelCaptionCurrent.setText("Synchronization Complete...");
                        jLabelCaptionCurrent.setFont(new Font("Tahoma", Font.BOLD, 15));
                        jLabelCaptionCurrent.setForeground(jLabelCreatorTitle.getForeground());
                    }
                }
            }
        }
    }

    private void writeToFile() throws IOException {
        writer.newLine();
        writer.newLine();
        writer.write("" + index);
        writer.newLine();
        writer.write(startTime + " --> " + endTime);
        writer.newLine();
        writer.write(d1);
        index++;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBrowseVideoFile;
    private javax.swing.JButton jButtonCreatorFileChooserSubmit;
    private javax.swing.JButton jButtonCreatorRawCaptionsSubmit;
    private javax.swing.JButton jButtonPlayPause;
    private javax.swing.JButton jButtonSync;
    private javax.swing.JCheckBox jCheckBoxEnableVideoPreview;
    public static javax.swing.JDialog jDialogCreatorFileChooser;
    public static javax.swing.JDialog jDialogCreatorRawCaptions;
    private javax.swing.JLabel jLabelAlbum;
    private javax.swing.JLabel jLabelArtist;
    private javax.swing.JLabel jLabelCaptionCurrent;
    private javax.swing.JLabel jLabelCaptionNext1;
    private javax.swing.JLabel jLabelCaptionNext2;
    private javax.swing.JLabel jLabelCaptionNext3;
    private javax.swing.JLabel jLabelCaptionPrevious;
    private javax.swing.JLabel jLabelCreatorFileChooserTitle;
    private javax.swing.JLabel jLabelCreatorFileName;
    private javax.swing.JLabel jLabelCreatorOutputHint;
    private javax.swing.JLabel jLabelCreatorOutputLocation;
    private javax.swing.JLabel jLabelCreatorRawCaptionsHint;
    private javax.swing.JLabel jLabelCreatorRawCaptionsTitle;
    public static javax.swing.JLabel jLabelCreatorTitle;
    public static javax.swing.JLabel jLabelDuration;
    private javax.swing.JLabel jLabelShorcutKeyHint;
    private javax.swing.JLabel jLabelSubtitlePreview;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JLabel jLabelVolume;
    private javax.swing.JLabel jLabelVolumeValue;
    private javax.swing.JLabel jLabelWebsiteHome;
    private javax.swing.JPanel jPanelCreatorFileChooserParent;
    private javax.swing.JPanel jPanelCreatorFooter;
    private javax.swing.JPanel jPanelCreatorParent;
    private javax.swing.JPanel jPanelCreatorRawCaptionsParent;
    private javax.swing.JPanel jPanelCreatorTitle;
    private javax.swing.JPanel jPanelPlaybackControls;
    private javax.swing.JPanel jPanelSubtitleParent;
    private javax.swing.JPanel jPanelSubtitlePreview;
    public static javax.swing.JPanel jPanelVideoPreview;
    public static javax.swing.JProgressBar jProgressBarPlayback;
    private javax.swing.JScrollPane jScrollPaneCreatorRawCaptions;
    private javax.swing.JSlider jSliderVolume;
    private javax.swing.JTextArea jTextAreaCreatorRawCaptions;
    private javax.swing.JTextField jTextFieldAlbum;
    private javax.swing.JTextField jTextFieldArtist;
    private javax.swing.JTextField jTextFieldTitle;
    // End of variables declaration//GEN-END:variables

    //MY VARIABLES
    static List<String> vlcArgs;
    static MediaPlayerFactory factory;
    public static Canvas vs;
    public static EmbeddedMediaPlayer mediaPlayer;
    static String filePath = "", fileName = "", output = "";
    public static boolean isPlaying = false, isStarted = false;
    public static long fileLength = 0;
    static String data = "";
    static int dataLength = 0, iter = 0;
    String d0 = "", d1 = "", d2 = "", d3 = "", d4 = "";
    int index = 3;
    boolean sync = false;
    BufferedWriter writer;
    MyTime startTime, endTime;
    StopWatch sw1;
    static boolean videoPre = true, firstTime = true, haveFile = false, fileOpen = false, loading = false;
    public static String title = "-", artist = "-", album = "-";
    //END MY VARIABLES
}
